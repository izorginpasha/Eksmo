import json
import requests
import re
from pathlib import Path
from utilities.utilities import save_events_to_excel,save_events_to_json

def compress_sfx_by_scene(
    input_path="output/events.json",
    output_path="output/compressed_sfx.json",
    model_name="mistral:latest"
):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–≥–º–µ–Ω—Ç—ã –∏–∑ —Ñ–∞–π–ª–∞
    with open(input_path, "r", encoding="utf-8") as f:
        segments = json.load(f)

    print(f"üì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: {len(segments)}")
    print("üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥–µ–ª–∏...")

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (JSON —Ç–µ–∫—Å—Ç)
    description = json.dumps(segments, ensure_ascii=False, indent=2)

    # Prompt –¥–ª—è –º–æ–¥–µ–ª–∏
    prompt = f"""
–¢—ã ‚Äî –∑–≤—É–∫–æ–≤–æ–π –¥–∏–∑–∞–π–Ω–µ—Ä.

–ù–∏–∂–µ —Å–ø–∏—Å–æ–∫ –∑–≤—É–∫–æ–≤—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤ —Å —Ç–µ–∫—Å—Ç–æ–º, –≤—Ä–µ–º–µ–Ω–µ–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏.

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏—Ö –∫–∞–∫ –æ–¥–Ω—É –∑–≤—É–∫–æ–≤—É—é —Å—Ü–µ–Ω—É –∏ –≤–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ —Ç–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. 
–ú–æ–∂–µ—à—å –æ–±—ä–µ–¥–∏–Ω—è—Ç—å, –º–µ–Ω—è—Ç—å –≤—Ä–µ–º—è –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –ª–∏—à–Ω–µ–µ.

–í–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ —Å—Ç—Ä–æ–≥–æ —Ç–∞–∫–æ–π:

[
  {{
    "sound": "–æ–ø–∏—Å–∞–Ω–∏–µ –∑–≤—É–∫–∞",
    "start": 12.0,
    "end": 25.3,
    "volume": -5,
    "pan": 0.0,
    "text": "—Ç–µ–∫—Å—Ç –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∑–≤—É–∫"
  }}
]

–ù–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π. –¢–æ–ª—å–∫–æ JSON. –í–æ—Ç –¥–∞–Ω–Ω—ã–µ:

{description}
"""

    try:
        print("üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–æ–¥–µ–ª—å...")
        response = requests.post(
            "http://localhost:11434/api/generate",
            json={"model": model_name, "prompt": prompt, "stream": False}
        )
        result = response.json().get("response", "").strip()
        print("üì§ –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω")

        match = re.search(r'\[(?:.|\n)*?\]', result)
        final_sfx = eval(match.group(0)) if match else []
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤: {len(final_sfx)}")
        print("üîç Preview:\n", json.dumps(final_sfx[:2], indent=2, ensure_ascii=False))  # –ü–æ–∫–∞–∂–∏ –ø–µ—Ä–≤—ã–µ 2
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –º–æ–¥–µ–ª–∏:", e)
        final_sfx = []

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª
    out_path = Path(output_path)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON-—Ñ–∞–π–ª
    save_events_to_json(final_sfx, output_path)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º  –≤ –µ–∫—Å–µ–ª—å

    save_events_to_excel(final_sfx, output_path="output/compressed_events.xlsx")
    return out_path
