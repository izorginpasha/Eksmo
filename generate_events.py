import whisper
import requests
from pathlib import Path
import pandas as pd
from pydub import AudioSegment
from utilities.utilities import save_events_to_excel
# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model = whisper.load_model("medium")

def get_sfx_from_ollama(text_segment):
    prompt = f"""
    –¢—ã ‚Äî –∑–≤—É–∫–æ–≤–æ–π –¥–∏–∑–∞–π–Ω–µ—Ä. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏ –≤–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Å –∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
    –§–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–≥–æ —Ç–∞–∫–æ–π:

    [
      {{
        "sound": "–Ω–∞–∑–≤–∞–Ω–∏–µ.wav",
        "start": 1.5,
        "duration": 2.0,
        "volume": -5
      }},
      ...
    ]

    –¢–æ–ª—å–∫–æ JSON, –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π. –¢–µ–∫—Å—Ç: \"\"\"{text_segment}\"\"\"
    """
    try:
        response = requests.post(
            "http://localhost:11434/api/generate",
            json={"model": "llama3", "prompt": prompt, "stream": False}
        )
        result = response.json().get("response", "").strip()
        print("üì§ –û—Ç–≤–µ—Ç –æ—Ç Ollama:", repr(result))

        import re
        match = re.search(r'\[(?:.|\n)*?\]', result)
        if match:
            return eval(match.group(0))
        return []
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ Ollama:", e)
        return []



def main():
    audio_path = "audio/voice.mp3"
    result = model.transcribe(audio_path, language="ru", verbose=False)
    segments = result["segments"]

    events = []
    for seg in segments:
        print(f"üó£Ô∏è –°–µ–≥–º–µ–Ω—Ç: {seg['text']}")
        sfx_list = get_sfx_from_ollama(seg['text'])
        print(f"üéµ –ù–∞–π–¥–µ–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤: {sfx_list}")
        for sfx in sfx_list:
            events.append({
                "text": seg['text'],
                "sound": sfx["sound"],
                "start": float(sfx["start"]),
                "duration": float(sfx["duration"]),
                "volume": float(sfx["volume"])
            })

    save_events_to_excel(events)

if __name__ == "__main__":
    main()
