import whisper
import requests
from pathlib import Path
import pandas as pd
from pydub import AudioSegment

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model = whisper.load_model("base")

def get_sfx_from_ollama(text_segment):
    prompt = f"""
    –¢—ã ‚Äî –∑–≤—É–∫–æ–≤–æ–π –¥–∏–∑–∞–π–Ω–µ—Ä.
    –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–¥–±–µ—Ä–∏ —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤. –í–µ—Ä–Ω–∏ —Å—Ç—Ä–æ–≥–æ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Python, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.
    –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: ["sound1.wav", "sound2.wav"]
    –¢–µ–∫—Å—Ç: "{text_segment}"
    """
    try:
        response = requests.post(
            "http://localhost:11434/api/generate",
            json={"model": "llama3", "prompt": prompt, "stream": False}
        )
        result = response.json().get("response", "").strip()
        print("üì§ –û—Ç–≤–µ—Ç –æ—Ç Ollama:", repr(result))

        import re
        match = re.search(r'\[(?:.|\n)*?\]', result)
        if match:
            return eval(match.group(0))
        return []
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ Ollama:", e)
        return []

def save_events_to_excel(events, output_path="events.xlsx"):
    if not events:
        print("‚ö†Ô∏è –ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
        return
    df = pd.DataFrame(events)
    df["time_sec"] = df["position"] / 1000
    df = df[["text", "sound", "position", "time_sec"]]
    df.to_excel(output_path, index=False)
    print(f"‚úÖ –°–æ–±—ã—Ç–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_path}")

def main():
    audio_path = "audio/voice.mp3"
    result = model.transcribe(audio_path, language="ru", verbose=False)
    segments = result["segments"]

    events = []
    for seg in segments:
        print(f"üó£Ô∏è –°–µ–≥–º–µ–Ω—Ç: {seg['text']}")
        sfx_list = get_sfx_from_ollama(seg['text'])
        print(f"üéµ –ù–∞–π–¥–µ–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤: {sfx_list}")
        for sound_file in sfx_list:
            events.append({
                "text": seg['text'],
                "sound": sound_file,
                "position": int(seg['start'] * 1000)
            })

    save_events_to_excel(events)

if __name__ == "__main__":
    main()
